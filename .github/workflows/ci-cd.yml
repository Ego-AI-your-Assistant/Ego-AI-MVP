name: Ego_AI CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build containers
        run: docker-compose build

      - name: Backend Tests
        run: |
           docker-compose run --rm backend \
             pytest --cov=app \
                    --cov-report=term-missing \
                    --cov-fail-under=85

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: backend/htmlcov/
          fail_ci_if_error: true

      - name: Frontend Tests
        run: docker-compose run --rm frontend \
               npm run test -- --watchAll=false \
               || echo "No frontend tests yet"

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            echo "Pulling latest code"
            cd ~/Ego_AI
            git fetch --all
            git reset --hard origin/main

            echo "Updating project-root .env"
            touch .env
            update_env_var() {
              VAR="$1"; VAL="$2"
              grep -q "^$VAR=" .env \
                && sed -i "s|^$VAR=.*|$VAR=$VAL|" .env \
                || echo "$VAR=$VAL" >> .env
            }
            update_env_var POSTGRES_USER "${{ secrets.DB_USER }}"
            update_env_var POSTGRES_PASSWORD "${{ secrets.DB_PASSWORD }}"
            update_env_var POSTGRES_DB "${{ secrets.DB_NAME }}"
            update_env_var PGADMIN_DEFAULT_EMAIL "${{ secrets.PG_EMAIL }}"
            update_env_var PGADMIN_DEFAULT_PASSWORD "${{ secrets.PG_PASSWORD }}"

            echo "Updating backend/.env"
            mkdir -p backend
            {
              echo "DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@db:5432/${{ secrets.DB_NAME }}"
            } > backend/.env

            echo "Restarting Docker services"
            docker-compose down
            docker-compose up -d --build
