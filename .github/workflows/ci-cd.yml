name: Ego_AI CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build containers
        run: docker-compose build

      - name: Backend Tests
        run: docker-compose run --rm backend pytest

      - name: Frontend Tests
        run: docker-compose run --rm frontend npm run test -- --watchAll=false || echo "No frontend tests yet"

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "Pulling latest code..."
            cd ~/Ego_AI
            git pull origin main

            echo "Updating .env (project root)"
            touch .env

            update_env_var() {
              VAR_NAME="$1"
              VAR_VALUE="$2"
              if grep -q "^$VAR_NAME=" .env; then
                sed -i "s|^$VAR_NAME=.*|$VAR_NAME=$VAR_VALUE|" .env
              else
                echo "$VAR_NAME=$VAR_VALUE" >> .env
              fi
            }

            update_env_var POSTGRES_USER "${{ secrets.DB_USER }}"
            update_env_var POSTGRES_PASSWORD "${{ secrets.DB_PASSWORD }}"
            update_env_var POSTGRES_DB "${{ secrets.DB_NAME }}"
            update_env_var PGADMIN_DEFAULT_EMAIL "${{ secrets.PG_EMAIL }}"
            update_env_var PGADMIN_DEFAULT_PASSWORD "${{ secrets.PG_PASSWORD }}"

            echo "Updating backend/.env (for DATABASE_URL)"
            mkdir -p backend
            touch backend/.env
            if grep -q "^DATABASE_URL=" backend/.env; then
              sed -i "s|^DATABASE_URL=.*|DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@db:5432/${{ secrets.DB_NAME }}|" backend/.env
            else
              echo "DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@db:5432/${{ secrets.DB_NAME }}" >> backend/.env
            fi

            echo "Restarting Docker services..."
            docker-compose down
            docker-compose up -d --build
